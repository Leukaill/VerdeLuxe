rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - users can read/write their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null && resource.data.isAdmin == true;
    }
    
    // Plants collection - public read, allow write for seeding
    match /plants/{plantId} {
      allow read: if true; // Public read access
      allow write: if true; // Allow seeding temporarily
    }
    
    // Categories collection - public read, allow write for seeding  
    match /categories/{categoryId} {
      allow read: if true; // Public read access
      allow write: if true; // Allow seeding temporarily
    }
    
    // Cart items - users can manage their own cart
    match /cartItems/{cartItemId} {
      allow read, write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
    }
    
    // Orders - users can read their own orders, admin can read all
    match /orders/{orderId} {
      allow read: if request.auth != null && 
        (resource.data.userId == request.auth.uid || 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true);
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
      allow update: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Wishlist items - users can manage their own wishlist
    match /wishlistItems/{wishlistItemId} {
      allow read, write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
    }
    
    // Reviews - authenticated users can create, read all, manage own
    match /reviews/{reviewId} {
      allow read: if true; // Public read access
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
      allow update, delete: if request.auth != null && 
        (resource.data.userId == request.auth.uid || 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true);
    }
    
    // Newsletter subscribers - admin only
    match /newsletterSubscribers/{subscriberId} {
      allow read, write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Site content - public read, admin write
    match /site_content/{contentId} {
      allow read: if true; // Public read access
      allow write: if true; // Allow seeding temporarily
    }
    
    // Admin credentials - allow creation for initial setup
    match /admin_credentials/{adminId} {
      allow read, write: if true; // Allow initial admin creation
    }
    
    // Newsletter subscribers - allow creation
    match /newsletter_subscribers/{subscriberId} {
      allow read, write: if true; // Allow initial seeding
    }
  }
}